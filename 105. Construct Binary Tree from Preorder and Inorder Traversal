/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode *func(vector<int> &preorder, vector<int> &inorder,int &index,int low, int high)
    {
        if(low>high) return NULL;
        TreeNode *root = new TreeNode(preorder[index]);
        int x = -1;
        index++;
        if(low==high) return root;
        for(int i=0;i<inorder.size();i++)
        {
            if(root->val==inorder[i])
            {
                x = i;
            }
        }
        
        root->left = func(preorder,inorder,index,low,x-1);
        root->right = func(preorder,inorder,index,x+1,high);
        return root;
        
        
    }
    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {
        int index = 0;
        return func(preorder,inorder,index,0,inorder.size()-1);
        
    }
};
