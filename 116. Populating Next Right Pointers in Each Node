//contant space
/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* left;
    Node* right;
    Node* next;

    Node() : val(0), left(NULL), right(NULL), next(NULL) {}

    Node(int _val) : val(_val), left(NULL), right(NULL), next(NULL) {}

    Node(int _val, Node* _left, Node* _right, Node* _next)
        : val(_val), left(_left), right(_right), next(_next) {}
};
*/

class Solution {
public:
    Node* connect(Node* root) {
        if(root==NULL) return root;
        Node *dummy = new Node(0);
        dummy->next = root;
        while(dummy->next!=NULL)
        {
            Node *ptr = dummy->next, *preptr = dummy;
            dummy->next=NULL;
            while(ptr!=NULL)
            {
                if(ptr->left)
                {
                    preptr->next = ptr->left;
                    preptr = preptr->next;
                }
                if(ptr->right)
                {
                    preptr->next = ptr->right;
                    preptr = preptr->next;
                }
                ptr = ptr->next;
            }
        }
        return root;
        
    }
};
